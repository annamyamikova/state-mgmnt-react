{"ast":null,"code":"import _defineProperty from \"/Users/annamyamikova/Documents/state-managements/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Actions\nimport { ADD_USERS_TO_ROOM, ADD_ROOM, ADD_MSG_TO_ROOM, SET_USERNAME, CONNECT_SOCKET, CLEAR_ROOMS } from 'actions/ChatActions';\nconst initialState = {\n  userName: '',\n  socket: null,\n  rooms: {}\n};\nexport function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USERNAME:\n      return _objectSpread({}, state, {\n        userName: action.payload\n      });\n\n    case ADD_MSG_TO_ROOM:\n      return _objectSpread({}, state, {\n        rooms: _objectSpread({}, state.rooms, {\n          [action.payload.roomName]: _objectSpread({}, state.rooms[action.payload.roomName], {\n            messages: action.payload.msg\n          })\n        })\n      });\n\n    case ADD_ROOM:\n      return _objectSpread({}, state, {\n        rooms: _objectSpread({}, state.rooms, {}, action.payload)\n      });\n\n    case ADD_USERS_TO_ROOM:\n      return _objectSpread({}, state, {\n        rooms: _objectSpread({}, state.rooms, {\n          [action.payload.roomName]: _objectSpread({}, state.rooms[action.payload.roomName], {\n            users: action.payload.users\n          })\n        })\n      });\n\n    case CLEAR_ROOMS:\n      return _objectSpread({}, state, {\n        rooms: []\n      });\n\n    case CONNECT_SOCKET:\n      return _objectSpread({}, state, {\n        socket: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/annamyamikova/Documents/state-managements/client/src/reducers/ChatReducer.js"],"names":["ADD_USERS_TO_ROOM","ADD_ROOM","ADD_MSG_TO_ROOM","SET_USERNAME","CONNECT_SOCKET","CLEAR_ROOMS","initialState","userName","socket","rooms","chatReducer","state","action","type","payload","roomName","messages","msg","users"],"mappings":";;;;;;AAAA;AACA,SACEA,iBADF,EAEEC,QAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,cALF,EAMEC,WANF,QAOO,qBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAmD;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,YAAL;AACE,+BACKQ,KADL;AACYJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AAD7B;;AAGF,SAAKZ,eAAL;AACE,+BACKS,KADL;AACYF,QAAAA,KAAK,oBAAME,KAAK,CAACF,KAAZ;AACb,WAACG,MAAM,CAACE,OAAP,CAAeC,QAAhB,qBAEOJ,KAAK,CAACF,KAAN,CAAYG,MAAM,CAACE,OAAP,CAAeC,QAA3B,CAFP;AAGIC,YAAAA,QAAQ,EAAEJ,MAAM,CAACE,OAAP,CAAeG;AAH7B;AADa;AADjB;;AASF,SAAKhB,QAAL;AACE,+BACKU,KADL;AACYF,QAAAA,KAAK,oBAAME,KAAK,CAACF,KAAZ,MAAsBG,MAAM,CAACE,OAA7B;AADjB;;AAGF,SAAKd,iBAAL;AACE,+BACKW,KADL;AACYF,QAAAA,KAAK,oBAAME,KAAK,CAACF,KAAZ;AACb,WAACG,MAAM,CAACE,OAAP,CAAeC,QAAhB,qBAEOJ,KAAK,CAACF,KAAN,CAAYG,MAAM,CAACE,OAAP,CAAeC,QAA3B,CAFP;AAGIG,YAAAA,KAAK,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAH1B;AADa;AADjB;;AASF,SAAKb,WAAL;AACE,+BACKM,KADL;AACYF,QAAAA,KAAK,EAAE;AADnB;;AAGF,SAAKL,cAAL;AACE,+BACKO,KADL;AACYH,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAD3B;;AAGF;AACE,aAAOH,KAAP;AAtCJ;AAwCD","sourcesContent":["// Actions\nimport {\n  ADD_USERS_TO_ROOM,\n  ADD_ROOM,\n  ADD_MSG_TO_ROOM,\n  SET_USERNAME,\n  CONNECT_SOCKET,\n  CLEAR_ROOMS\n} from 'actions/ChatActions';\n\nconst initialState = {\n  userName: '',\n  socket: null,\n  rooms: {}\n};\n\nexport function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USERNAME:\n      return {\n        ...state, userName: action.payload\n      };\n    case ADD_MSG_TO_ROOM:\n      return {\n        ...state, rooms: {...state.rooms,\n          [action.payload.roomName]:\n            {\n              ...state.rooms[action.payload.roomName],\n              messages: action.payload.msg\n            }\n        }\n      };\n    case ADD_ROOM:\n      return {\n        ...state, rooms: {...state.rooms, ...action.payload}\n      };\n    case ADD_USERS_TO_ROOM:\n      return {\n        ...state, rooms: {...state.rooms,\n          [action.payload.roomName]:\n            {\n              ...state.rooms[action.payload.roomName],\n              users: action.payload.users\n            }\n        }\n      };\n    case CLEAR_ROOMS:\n      return {\n        ...state, rooms: []\n      };\n    case CONNECT_SOCKET:\n      return {\n        ...state, socket: action.payload\n      };\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}