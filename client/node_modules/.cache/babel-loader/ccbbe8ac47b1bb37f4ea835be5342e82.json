{"ast":null,"code":"import _slicedToArray from \"/Users/annamyamikova/Documents/state-managements/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/annamyamikova/Documents/state-managements/client/src/containers/UserList.js\";\nimport { Badge, Card, Typography, Icon, Drawer } from \"antd\";\nimport React, { useState } from \"react\";\nconst Text = Typography.Text;\n\nconst UserList = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        visible = _useState2[0],\n        setVisible = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userData = _useState4[0],\n        setUserData = _useState4[1];\n\n  const showDrawer = user => {\n    return () => {\n      setUserData(user);\n      setVisible(true);\n    };\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      height: \"600px\"\n    },\n    title: \"Users\",\n    headStyle: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    style: {\n      listStyleType: \"none\",\n      padding: \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.users.map((user, index) => {\n    if (user !== null) return React.createElement(\"li\", {\n      style: {\n        listStyleType: \"none\"\n      },\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      status: user.isOnline ? \"success\" : \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), user.userName === props.name ? React.createElement(Text, {\n      code: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, props.name) : React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, user.userName), React.createElement(Icon, {\n      style: {\n        paddingLeft: \"5px\",\n        cursor: \"pointer\"\n      },\n      type: \"info-circle\",\n      onClick: showDrawer(user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));else return null;\n  }))), React.createElement(Drawer, {\n    title: \"Information about user: \".concat(userData.userName),\n    width: 300,\n    placement: \"right\",\n    closable: false,\n    onClose: onClose,\n    visible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"IP: \".concat(userData.id)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Country: \".concat(userData.country)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"City: \".concat(userData.city)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Country Code: \".concat(userData.countyCode)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Online status: \".concat(userData.isOnline))));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/Users/annamyamikova/Documents/state-managements/client/src/containers/UserList.js"],"names":["Badge","Card","Typography","Icon","Drawer","React","useState","Text","UserList","props","visible","setVisible","userData","setUserData","showDrawer","user","onClose","height","textAlign","listStyleType","padding","users","map","index","isOnline","userName","name","paddingLeft","cursor","id","country","city","countyCode"],"mappings":"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","sourcesContent":["import {Badge, Card, Typography, Icon, Drawer} from \"antd\";\nimport React, {useState} from \"react\";\n\nconst {Text} = Typography;\n\n\nconst UserList = (props) => {\n\n    const [visible, setVisible] = useState(false);\n    const [userData, setUserData] = useState({});\n\n    const showDrawer = (user) => {\n        return () => {\n            setUserData(user);\n            setVisible(true);\n        }\n    };\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    return (\n        <React.Fragment>\n            <Card style={{height: \"600px\"}} title=\"Users\" headStyle={{textAlign: \"center\"}}>\n                <ul style={{listStyleType: \"none\", padding: \"0\",}}>\n                    {\n                        props.users.map((user, index) => {\n                            if (user !== null) return <li style={{listStyleType: \"none\"}} key={index}>\n                                <Badge status={(user.isOnline) ? \"success\" : \"default\"}/>\n                                {(user.userName === props.name) ? <Text code>{props.name}</Text> :\n                                    <Text>{user.userName}</Text>}\n                                <Icon style={{paddingLeft: \"5px\", cursor: \"pointer\"}} type=\"info-circle\"\n                                      onClick={showDrawer(user)}/>\n                            </li>;\n                            else return null;\n                        })\n                    }\n                </ul>\n            </Card>\n            <Drawer\n                title={`Information about user: ${userData.userName}`}\n                width={300}\n                placement=\"right\"\n                closable={false}\n                onClose={onClose}\n                visible={visible}\n            >\n                <p>{`IP: ${userData.id}`}</p>\n                <p>{`Country: ${userData.country}`}</p>\n                <p>{`City: ${userData.city}`}</p>\n                <p>{`Country Code: ${userData.countyCode}`}</p>\n                <p>{`Online status: ${userData.isOnline}`}</p>\n            </Drawer>\n        </React.Fragment>\n    )\n};\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}