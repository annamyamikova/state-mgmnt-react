{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/annamyamikova/Documents/state-managements/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/annamyamikova/Documents/state-managements/client/src/components/FormUsername.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  box-shadow: 0px 8px 12px rgba(0, 0, 0, 0.04);\\n  border-radius: 5px;\\n  display: block;\\n  width: 300px;\\n  height: 200px;\\n  margin-top: 15%;\\n  padding-top: 50px;\\n  background-color: #FFFFFF;\\n  padding-left: 20px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Button, Form, Icon, Input } from \"antd\";\nimport styled from \"@emotion/styled\";\nconst WrapperForm = styled.div(_templateObject());\n\nclass FormUsername extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (values.username === undefined) return;\n\n        if (!err) {\n          this.props.successValidation(values);\n        }\n      });\n    };\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched;\n    const usernameError = isFieldTouched('username') && getFieldError('username');\n    return React.createElement(WrapperForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"inline\",\n      onSubmit: this.handleSubmit,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      validateStatus: usernameError ? 'error' : '',\n      help: usernameError || '',\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: false\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      style: {\n        marginTop: \"30px\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Join to chat!\"))));\n  }\n\n}\n\nconst UsernameForm = Form.create({\n  name: 'set_username'\n})(FormUsername);\nexport default UsernameForm;","map":{"version":3,"sources":["/Users/annamyamikova/Documents/state-managements/client/src/components/FormUsername.js"],"names":["React","Button","Form","Icon","Input","styled","WrapperForm","div","FormUsername","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","username","undefined","successValidation","render","getFieldDecorator","getFieldError","isFieldTouched","usernameError","display","flexDirection","justifyContent","rules","required","color","marginTop","UsernameForm","create","name"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,KAA5B,QAAwC,MAAxC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAV,mBAAjB;;AAcA,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAEvCC,YAFuC,GAExBC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC5C,YAAIA,MAAM,CAACC,QAAP,KAAoBC,SAAxB,EAAmC;;AACnC,YAAI,CAACH,GAAL,EAAU;AACN,eAAKH,KAAL,CAAWO,iBAAX,CAA6BH,MAA7B;AACH;AACJ,OALD;AAMH,KAVsC;AAAA;;AAYvCI,EAAAA,MAAM,GAAG;AAAA,6BAEsD,KAAKR,KAAL,CAAWC,IAFjE;AAAA,UAEEQ,iBAFF,oBAEEA,iBAFF;AAAA,UAEqBC,aAFrB,oBAEqBA,aAFrB;AAAA,UAEoCC,cAFpC,oBAEoCA,cAFpC;AAGL,UAAMC,aAAa,GAAGD,cAAc,CAAC,UAAD,CAAd,IAA8BD,aAAa,CAAC,UAAD,CAAjE;AAEA,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,KAAKb,YAArC;AAAmD,MAAA,KAAK,EAAE;AAACgB,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,aAAa,EAAC;AAA/B,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,cAAc,EAAEF,aAAa,GAAG,OAAH,GAAa,EAArD;AAAyD,MAAA,IAAI,EAAEA,aAAa,IAAI,EAAhF;AAAoF,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAiBE,QAAAA,cAAc,EAAC;AAAhC,OAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,iBAAiB,CAAC,UAAD,EAAa;AAC3BO,MAAAA,KAAK,EAAE,CAAC;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAD;AADoB,KAAb,CAAjB,CAGG,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ;AAEI,MAAA,WAAW,EAAC,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADL,CADJ,EAWI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,MAAZ;AAAoBN,QAAAA,OAAO,EAAE,MAA7B;AAAqCE,QAAAA,cAAc,EAAE;AAArD,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAXJ,CADJ,CADJ;AAqBH;;AAtCsC;;AAyC3C,MAAMK,YAAY,GAAG/B,IAAI,CAACgC,MAAL,CAAY;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAZ,EAAoC3B,YAApC,CAArB;AAEA,eAAeyB,YAAf","sourcesContent":["import React from 'react';\nimport {Button, Form, Icon, Input} from \"antd\";\nimport styled from \"@emotion/styled\";\n\n\nconst WrapperForm = styled.div`\n  box-shadow: 0px 8px 12px rgba(0, 0, 0, 0.04);\n  border-radius: 5px;\n  display: block;\n  width: 300px;\n  height: 200px;\n  margin-top: 15%;\n  padding-top: 50px;\n  background-color: #FFFFFF;\n  padding-left: 20px;\n`;\n\n\n\nclass FormUsername extends React.Component {\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (values.username === undefined) return;\n            if (!err) {\n                this.props.successValidation(values);\n            }\n        });\n    };\n\n    render() {\n\n        const {getFieldDecorator, getFieldError, isFieldTouched} = this.props.form;\n        const usernameError = isFieldTouched('username') && getFieldError('username');\n\n        return (\n            <WrapperForm>\n                <Form layout=\"inline\" onSubmit={this.handleSubmit} style={{display:\"flex\", flexDirection:\"column\"}}>\n                    <Form.Item validateStatus={usernameError ? 'error' : ''} help={usernameError || ''} style={{display:\"flex\", justifyContent:\"center\"}}>\n                        {getFieldDecorator('username', {\n                            rules: [{required: false}],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                placeholder=\"Username\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item style={{marginTop: \"30px\", display: \"flex\", justifyContent: \"center\"}}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Join to chat!\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </WrapperForm>\n        )\n    }\n}\n\nconst UsernameForm = Form.create({name: 'set_username'})(FormUsername);\n\nexport default UsernameForm;"]},"metadata":{},"sourceType":"module"}