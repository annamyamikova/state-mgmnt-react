{"ast":null,"code":"var _jsxFileName = \"/Users/annamyamikova/Documents/state-managements/client/src/containers/MessagesTimeline.js\";\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Timeline, Card } from 'antd'; // Components\n\nimport Message from \"components/Message\";\n\nfunction MessagesTimeline(props) {\n  return React.createElement(Card, {\n    className: \"message-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Scrollbars, {\n    autoHide: true,\n    universal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"middle-all-space\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Timeline, {\n    mode: \"alternate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.messages.map((msg, index) => {\n    if (msg !== null) {\n      const user = props.users.find(user => {\n        return user.userName === msg.userName;\n      });\n\n      if (user !== undefined) {\n        return React.createElement(Timeline.Item, {\n          key: index,\n          position: user.userName === props.userName ? \"left\" : \"right\",\n          color: user.isOnline ? \"green\" : \"gray\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(Message, {\n          content: msg.text,\n          author: msg.userName,\n          datetime: msg.formatTime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }));\n      } else {\n        if (msg.userName === 'ChatBot') {\n          return React.createElement(Timeline.Item, {\n            key: index,\n            position: 'right',\n            color: \"orange\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(Message, {\n            content: msg.text,\n            author: msg.userName,\n            datetime: msg.formatTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }));\n        }\n      }\n    }\n\n    return null;\n  })))));\n}\n\nexport default MessagesTimeline;","map":{"version":3,"sources":["/Users/annamyamikova/Documents/state-managements/client/src/containers/MessagesTimeline.js"],"names":["React","Scrollbars","Timeline","Card","Message","MessagesTimeline","props","messages","map","msg","index","user","users","find","userName","undefined","isOnline","text","formatTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAAQC,QAAR,EAAkBC,IAAlB,QAA6B,MAA7B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,QAAQ,MAApB;AAAqB,IAAA,SAAS,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChC,QAAID,GAAG,KAAK,IAAZ,EAAkB;AACd,YAAME,IAAI,GAAGL,KAAK,CAACM,KAAN,CAAYC,IAAZ,CAAkBF,IAAD,IAAQ;AAClC,eAAQA,IAAI,CAACG,QAAL,KAAkBL,GAAG,CAACK,QAA9B;AACH,OAFY,CAAb;;AAGA,UAAIH,IAAI,KAAKI,SAAb,EAAwB;AACpB,eACI,oBAAC,QAAD,CAAU,IAAV;AAAe,UAAA,GAAG,EAAEL,KAApB;AAA2B,UAAA,QAAQ,EAAGC,IAAI,CAACG,QAAL,KAAkBR,KAAK,CAACQ,QAAzB,GAAqC,MAArC,GAA8C,OAAnF;AAA4F,UAAA,KAAK,EAAEH,IAAI,CAACK,QAAL,GAAgB,OAAhB,GAA0B,MAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqI,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAEP,GAAG,CAACQ,IAAtB;AAA4B,UAAA,MAAM,EAAER,GAAG,CAACK,QAAxC;AAAkD,UAAA,QAAQ,EAAEL,GAAG,CAACS,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArI,CADJ;AAGH,OAJD,MAIO;AACH,YAAIT,GAAG,CAACK,QAAJ,KAAiB,SAArB,EAAgC;AAC5B,iBACI,oBAAC,QAAD,CAAU,IAAV;AAAe,YAAA,GAAG,EAAEJ,KAApB;AAA2B,YAAA,QAAQ,EAAE,OAArC;AAA8C,YAAA,KAAK,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6D,oBAAC,OAAD;AAAS,YAAA,OAAO,EAAED,GAAG,CAACQ,IAAtB;AAA4B,YAAA,MAAM,EAAER,GAAG,CAACK,QAAxC;AAAkD,YAAA,QAAQ,EAAEL,GAAG,CAACS,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA7D,CADJ;AAGH;AACJ;AACJ;;AAAC,WAAO,IAAP;AACL,GAjBA,CADL,CADJ,CADJ,CADJ,CADJ;AA8BH;;AAED,eAAeb,gBAAf","sourcesContent":["import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport {Timeline, Card} from 'antd';\n\n// Components\nimport Message from \"components/Message\";\n\nfunction MessagesTimeline(props) {\n    return (\n        <Card className=\"message-list\">\n            <Scrollbars autoHide universal>\n                <div className=\"middle-all-space\">\n                    <Timeline mode=\"alternate\">\n                        {props.messages.map((msg, index) => {\n                            if (msg !== null) {\n                                const user = props.users.find((user)=>{\n                                    return (user.userName === msg.userName)\n                                });\n                                if (user !== undefined) {\n                                    return (\n                                        <Timeline.Item key={index} position={(user.userName === props.userName) ? \"left\" : \"right\"} color={user.isOnline ? \"green\" : \"gray\"}><Message content={msg.text} author={msg.userName} datetime={msg.formatTime}/></Timeline.Item>\n                                    )\n                                } else {\n                                    if (msg.userName === 'ChatBot') {\n                                        return (\n                                            <Timeline.Item key={index} position={'right'} color=\"orange\"><Message content={msg.text} author={msg.userName} datetime={msg.formatTime}/></Timeline.Item>\n                                        )\n                                    }\n                                }\n                            } return null;\n                        })}\n                    </Timeline>\n                </div>\n            </Scrollbars>\n        </Card>\n\n\n    );\n}\n\nexport default MessagesTimeline;"]},"metadata":{},"sourceType":"module"}